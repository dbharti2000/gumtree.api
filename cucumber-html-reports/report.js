$(document).ready(function() {var formatter = new CucumberHTML.DOMFormatter($('.cucumber-report'));formatter.uri("gumtree.api/GumTreeApiTest.feature");
formatter.feature({
  "line": 2,
  "name": "Create API Tests",
  "description": "",
  "id": "create-api-tests",
  "keyword": "Feature",
  "tags": [
    {
      "line": 1,
      "name": "@gumtree"
    }
  ]
});
formatter.scenario({
  "line": 5,
  "name": "GET and POST call to fake API and validate the responses",
  "description": "",
  "id": "create-api-tests;get-and-post-call-to-fake-api-and-validate-the-responses",
  "type": "scenario",
  "keyword": "Scenario",
  "tags": [
    {
      "line": 4,
      "name": "@test"
    }
  ]
});
formatter.step({
  "line": 6,
  "name": "I create a random userId",
  "keyword": "Given "
});
formatter.step({
  "line": 7,
  "name": "I set the GET api URL",
  "keyword": "And "
});
formatter.step({
  "line": 8,
  "name": "I make a GET request to api",
  "keyword": "When "
});
formatter.step({
  "line": 9,
  "name": "status code should be 200",
  "keyword": "Then "
});
formatter.step({
  "line": 10,
  "name": "response should contain newly generated id",
  "keyword": "And "
});
formatter.step({
  "line": 11,
  "name": "id in the the response should be between 1 and 100",
  "keyword": "And "
});
formatter.step({
  "line": 12,
  "name": "I add the body for POST call",
  "keyword": "Given "
});
formatter.step({
  "line": 13,
  "name": "I set the POST api URL",
  "keyword": "And "
});
formatter.step({
  "line": 14,
  "name": "I make a POST request to api",
  "keyword": "When "
});
formatter.step({
  "line": 15,
  "name": "status code should be 201",
  "keyword": "Then "
});
formatter.step({
  "line": 16,
  "name": "response should contain below items:",
  "rows": [
    {
      "cells": [
        "userID",
        "title",
        "body"
      ],
      "line": 17
    },
    {
      "cells": [
        "autoGeneratedValue",
        "TestTitle",
        "TestBody"
      ],
      "line": 18
    }
  ],
  "keyword": "And "
});
formatter.match({
  "location": "GumTreeApiTestStepDefs.i_create_a_random_userId()"
});
formatter.result({
  "duration": 365593294,
  "status": "passed"
});
formatter.match({
  "arguments": [
    {
      "val": "GET",
      "offset": 10
    }
  ],
  "location": "GumTreeApiTestStepDefs.i_have_the_jsonPlacelaceHolder(String)"
});
formatter.result({
  "duration": 2142769,
  "status": "passed"
});
formatter.match({
  "arguments": [
    {
      "val": "GET",
      "offset": 9
    }
  ],
  "location": "GumTreeApiTestStepDefs.send_the_post_request(String)"
});
formatter.result({
  "duration": 1740883368,
  "status": "passed"
});
formatter.match({
  "arguments": [
    {
      "val": "200",
      "offset": 22
    }
  ],
  "location": "GumTreeApiTestStepDefs.api_should_return_status_code(int)"
});
formatter.result({
  "duration": 6568738,
  "status": "passed"
});
formatter.match({
  "location": "GumTreeApiTestStepDefs.response_should_have_new_id()"
});
formatter.result({
  "duration": 305349722,
  "status": "passed"
});
formatter.match({
  "arguments": [
    {
      "val": "1",
      "offset": 41
    },
    {
      "val": "100",
      "offset": 47
    }
  ],
  "location": "GumTreeApiTestStepDefs.response_should_have_new_id(int,int)"
});
formatter.result({
  "duration": 8369226,
  "status": "passed"
});
formatter.match({
  "location": "GumTreeApiTestStepDefs.send_data()"
});
formatter.result({
  "duration": 37585,
  "status": "passed"
});
formatter.match({
  "arguments": [
    {
      "val": "POST",
      "offset": 10
    }
  ],
  "location": "GumTreeApiTestStepDefs.i_have_the_jsonPlacelaceHolder(String)"
});
formatter.result({
  "duration": 54432,
  "status": "passed"
});
formatter.match({
  "arguments": [
    {
      "val": "POST",
      "offset": 9
    }
  ],
  "location": "GumTreeApiTestStepDefs.send_the_post_request(String)"
});
formatter.result({
  "duration": 515389502,
  "status": "passed"
});
formatter.match({
  "arguments": [
    {
      "val": "201",
      "offset": 22
    }
  ],
  "location": "GumTreeApiTestStepDefs.api_should_return_status_code(int)"
});
formatter.result({
  "duration": 449026,
  "status": "passed"
});
formatter.match({
  "location": "GumTreeApiTestStepDefs.response_contains(DataTable)"
});
formatter.result({
  "duration": 19355962,
  "status": "passed"
});
});